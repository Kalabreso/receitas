Relatório referente à semana passada (dia 14/01 até o dia 18).

 - Foram criadas duas classes de modelos, o Usuário contendo como atributos: id, nome, email e senha.
E também a Receita, tendo como atributos: id, nome, ingredientes, descrição e usuário.
 - Foi criada e implementada a tela de login, aonde o usuário vai digitar seu e-mail e senha, a aplicação
vai fazer uma busca no banco de dados, caso o usuário for encontrado e der tudo certo, a interface vai ser
redirecionada para a home, caso o contrário, vai surgir um pop-up dizendo que o usuário não foi encontrado.
 - Foi criada e implementada a tela de cadastrado, aonde o usuário vai ter que digitar seus dados (nome, email e senha)
e então será cadastrado no banco, podendo então realizar o seu login.
 - Criamos um arquivo chamado gitignore, para ignorar o commit no github de arquivos ou pastas sigilosas do projeto.
 - Foram adicionadas duas dependências no pom.xml, o mysql connector e a do dotenv, para que a aplicação possa se conectar 
com o banco e puxar os dados do arquivo .env adicionado na raiz.
 - Foi criada a fábrica de conexões, responsável por fazer com que a aplicação se conecte com o banco mysql.
 - Foi criada e implementada a tela de cadastro da receita, aonde o usuário vai poder digitar os dados da receita
(nome, ingredientes e descrição) e salvá-la no banco de dados. Como o usuário está logado, a aplicação vai ser
responsável por pegar os dados desse usuário e salvar junto com a receita.
 - Foi criada e implementada a tela da lista das receitas, ela vai ser responsável por mostrar todas as receitas
salvas no banco e identificar de quem é o dono (usuário) delas, mostrando seu nome e email.

Relatório referente dessa semana.

 - Foi criada e implementada a tela de editar e remover receita, nela vai ter um comboBox com as receitas do usuário
logado, ao selecionar a receita, os textField do nome, ingredientes e descrição vai ser preenchido com os dados da 
mesma para então edita-lás e em baixo disso vai ter duas opções de botões: atualizar a receita selecionada com os
novos dados ou então remove-lá.
 - Foi criada e implementada a tela de editar o usuário logado, quando o usuário clicar nesse botão, uma nova tela vai 
se abrir com os dados dele preenchido nos textField (nome, email e senha) para poder editar e enviar essa ação para o
banco de dados.
 - Foi criado um botão na home de remover usuário e implementada, quando ele clicar nessa opção o usuário vai ser
removido do banco de dados e redirencionado para a tela de login para se conectar na aplicação, como o usuário dele
antigo foi removido, terá que se conectar com uma nova conta.